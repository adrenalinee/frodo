agent:
  enabled: true ## default agent 사용
  podName: jenkins-agent-default
  nodeUsageMode: NORMAL
#  command: jenkins-agent
  idleMinutes: 60 ## job 실행용 pod 대기 시간(대기시간중에 잡 실행가능)
  containerCap: 10 ## 한클러스터에서 동시에 실행가능한 최대 job 갯수
  resources:
    limits:
      cpu:
      memory:
controller:
  sidecars:
    configAutoReload:
      enabled: false
  installPlugins:
    - workflow-aggregator
    - ldap
    - job-dsl
    - xml-job-to-job-dsl
    - github
    - kubernetes
    - git
    - configuration-as-code
    - pipeline-stage-view
    - pipeline-graph-view
    - remote-file
    - http_request
    - matrix-auth
    - nested-view
    - pipeline-utility-steps
    - github-oauth
    - ws-cleanup
    - kubernetes-cli
    - authorize-project
    - build-user-vars-plugin
  JCasC:
    configScripts:
      welcome-message: |-
        jenkins:
          systemMessage: "frodo 가 관리하는 jenkins 입니다."
      authorization: |-
        security:
          scriptApproval:
            approvedSignatures:
            - method groovy.lang.GroovyObject getProperty java.lang.String
            - method groovy.lang.GroovyObject invokeMethod java.lang.String java.lang.Object
            - method hudson.model.AbstractProject disable
            - method hudson.model.Item getName
            - method hudson.model.ItemGroup getItems
            - method hudson.model.ViewGroup deleteView hudson.model.View
            - method hudson.model.ViewGroup getView java.lang.String
            - method jenkins.model.ParameterizedJobMixIn$ParameterizedJob setDisabled boolean
            - staticMethod jenkins.model.Jenkins getInstance
          queueItemAuthenticator:
            authenticators:
            - global:
                strategy: triggeringUsersAuthorizationStrategy
        jenkins:
          authorizationStrategy:
            globalMatrix:
              permissions:
              - "USER:Job/Read:anonymous"
              - "USER:Overall/Read:anonymous"
              - "USER:View/Read:anonymous"
              - "GROUP:Overall/Administer:authenticated"
      seed-jobs: |-
        jobs:
          - script: >
              job("frodo.init") {
                description("frodo 에서 사용할 seed job 을 생성합니다.")
                parameters {
                  credentialsParam("frodoRepositoryCredential") {
                    type("com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl")
                    description("빌드 스크립트를 다운받을때 사용할 인증 token 을 지정하세요.")
                  }
                  stringParam {
                    name("frodoRepositoryUrl")
                    defaultValue("https://github.com/adrenalinee/frodo.git")
                    description("빌드 스크립트를 가져올 git 주소입니다.")
                    trim(true)
                  }
                  stringParam {
                    name("frodoBranch")
                    defaultValue("master")
                    description("빌드 스크립트를 가져올 branch 입니다.")
                    trim(true)
                  }
                }
                scm {
                  git {
                    branch('$frodoBranch')
                    remote {
                      credentials('$frodoRepositoryCredential')
                      url('$frodoRepositoryUrl')
                    }
                  }
                }
                steps {
                  jobDsl {
                    targets(
                      "managingJobs/createSeedBuildGradlePushImageJobDsl.groovy\n" +
                      "managingJobs/createToDeleteFrodoProjectJobDsl.groovy\n" +
                      "managingJobs/createToCreateArgocdAppJobDsl.groovy\n" +
                      "managingJobs/createToDeleteArgocdAppJobDsl.groovy\n" +
                      "managingJobs/createFrodoJobsView.groovy"
                    )
                    sandbox(true)
                  }
                }
              }
