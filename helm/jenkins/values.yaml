agent:
  enabled: true
  command: jenkins-agent
  idleMinutes: 60
  containerCap: 10
  resources:
    limits:
      cpu:
      memory:
controller:
  sidecars:
    configAutoReload:
      enabled: true
  installPlugins:
    - workflow-aggregator
    - ldap
    - job-dsl
    - xml-job-to-job-dsl
    - github
    - kubernetes
    - git
    - configuration-as-code
    - pipeline-stage-view
    - remote-file
    - http_request
    - matrix-auth
    - nested-view
    - pipeline-utility-steps
    - github-oauth
    - ws-cleanup
    - kubernetes-cli
    - authorize-project
    - build-user-vars-plugin
  JCasC:
    configScripts:
      authorization: |-
        security:
          scriptApproval:
            approvedSignatures:
            - method groovy.lang.GroovyObject getProperty java.lang.String
            - method groovy.lang.GroovyObject invokeMethod java.lang.String java.lang.Object
          queueItemAuthenticator:
            authenticators:
            - global:
                strategy: triggeringUsersAuthorizationStrategy
        jenkins:
          authorizationStrategy:
            globalMatrix:
              permissions:
              - "USER:Job/Read:anonymous"
              - "USER:Overall/Read:anonymous"
              - "USER:View/Read:anonymous"
              - "GROUP:Overall/Administer:authenticated"
      seed-jobs: |-
        jobs:
          - script: >
              job("frodo-seed-job") {
                description("frodo 를 위한 build job 을 생성해주는 seed job 입니다.")
                parameters {
                  credentialsParam("frodoCredential") {
                    type("com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl")
                    description("빌드 스크립트를 다운받을때 사용할 인증 token 을 지정하세요.")
                  }
                  stringParam {
                    name("frodoRepositoryUrl")
                    defaultValue("https://github.com/adrenalinee/frodo.git")
                    description("빌드 스크립트를 가져올 git 주소입니다.")
                    trim(true)
                  }
                  stringParam {
                    name("frodoBranch")
                    defaultValue("master")
                    description("빌드 스크립트를 가져올 branch 입니다.")
                    trim(true)
                  }
                }
                scm {
                  git {
                    branch('$frodoBranch')
                    remote {
                      credentials('$frodoCredential')
                      url('$frodoRepositoryUrl')
                    }
                  }
                }
                steps {
                  jobDsl {
                    targets(
                      "jobDsl/createBuildGradleJobDsl.groovy\n" +
                      "jobDsl/createBuildGradlePushImageJobDsl.groovy"
                    )
                    sandbox(true)
                  }
                }
              }
